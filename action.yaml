name: 'Colvin Deploy PHP API'
description: 'Deploy Colvin PHP API projects to Google Cloud'
runs:
  using: "composite"
  steps:
  - name: "Checkout git repo"
    uses: actions/checkout@v2

  - name: "Unlock secrets"
    uses: sliteteam/github-action-git-crypt-unlock@1.1.0
    env:
      GIT_CRYPT_KEY: ${{ secrets.GIT_CRYPT_KEY }}

  - name: "Setup gcloud command"
    uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
    with:
      version: '298.0.0'
      service_account_key: ${{ secrets.SA_GCP }}
      export_default_credentials: true
      project_id: $GCP_PROJECT_ID

  - name: "Get kubernetes credentials"
    run: gcloud container clusters get-credentials colvin --region $GCP_REGION

  - name: "Install terraform"
    uses: hashicorp/setup-terraform@v1
    with:
      terraform_version: 0.12.26

  - name: "Terraform Init"
    run: terraform init -backend-config="credentials=`echo $SA_GCP`" -backend-config="prefix=`echo $APP_NAME`" -input=false terraform/

  - name: "Terraform Workspace"
    run: terraform workspace select colvin terraform/ || terraform workspace new colvin terraform/

  - name: "Terraform Plan"
    run: terraform plan -var="client_secret=`echo $SA_GCP`" -var="app_name=`echo $APP_NAME`" terraform/

  - name: "Terraform Apply"
    run: terraform apply -var="client_secret=`echo $SA_GCP`" -var="app_name=`echo $APP_NAME`" -auto-approve terraform/

  - name: "Get latest tag and auto increment version"
    run: |
      LAST=`gcloud container images list-tags $IMG_PHP --sort-by="TAGS" | grep -v TIMESTAMP | sort -rVk2 | head -n1 | awk '{print $2}'`
      REGEX="([0-9]+).([0-9]+)"
      if [[ $LAST =~ $REGEX ]]; then MAJOR="${BASH_REMATCH[1]}"; MINOR="${BASH_REMATCH[2]}"; fi
      if [ $MAJOR_VERSION != $MAJOR ]; then MAJOR=$MAJOR_VERSION; MINOR="1"; else MINOR=$(echo $MINOR + 1 | bc); fi
      echo "::set-env name=TAG_PHP::$MAJOR.$MINOR"

  - name: "Build docker images"
    run: |
      export PHP_IMAGE="$IMG_PHP:$TAG_PHP"
      docker-compose build php

  - name: "Configure docker-cli to push images in GCR"
    run: gcloud auth configure-docker

  - name: "Push docker images to GCR"
    run: docker push $IMG_PHP:$TAG_PHP

  - name: "Replace php version in helm values.yaml"
    #run: yq w -i ./api/helm/web-setup-api/values.yaml "php.image.tag" "$TAG_PHP"
    run: sed -i "s/TAG_PHP/$TAG_PHP/g" ./api/helm/$APP_NAME/values.yaml

  - name: "Helm dependencies update"
    run: helm dependency update ./api/helm/$APP_NAME/

  - name: "Deploy Helm"
    run: helm upgrade $APP_NAME ./api/helm/$APP_NAME/ --install --wait --atomic --values=./api/helm/$APP_NAME/values.yaml
  - uses: 8398a7/action-slack@v3
    with:
      status: ${{ job.status }}
      author_name: Deploy $APP_NAME
      fields: repo,commit
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
    if: always() # Pick up events even if the job fails or is canceled.